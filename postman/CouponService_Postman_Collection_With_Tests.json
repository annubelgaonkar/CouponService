{
  "info": {
    "name": "Coupon Service - Monk Commerce (with Tests)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Collection to test Coupon Service endpoints (CRUD + applicable/apply). Set environment variable baseUrl to http://localhost:8080"
  },
  "item": [
    {
      "name": "Create Coupon - Cart-wise",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"code\": \"CART10\",\n  \"type\": \"CART\",\n  \"details\": \"{\\\"threshold\\\":100, \\\"discountType\\\":\\\"PERCENT\\\", \\\"discountValue\\\":10}\",\n  \"active\": true\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/coupons",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "coupons"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 201', () => pm.response.to.have.status(201));",
              "let j = pm.response.json();",
              "if (j && j.id) { pm.environment.set('coupon_cart_id', j.id); pm.environment.set('coupon_cart_code', j.code); }",
              "pm.test('Has id', () => pm.expect(j.id).to.exist);"
            ]
          }
        }
      ]
    },
    {
      "name": "Create Coupon - Product-wise",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"code\": \"PROD20_P1\",\n  \"type\": \"PRODUCT\",\n  \"details\": \"{\\\"productId\\\":1, \\\"discountType\\\":\\\"PERCENT\\\", \\\"discountValue\\\":20}\",\n  \"active\": true\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/coupons",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "coupons"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 201', () => pm.response.to.have.status(201));",
              "let j = pm.response.json(); if (j && j.id) { pm.environment.set('coupon_prod_id', j.id); pm.environment.set('coupon_prod_code', j.code); }"
            ]
          }
        }
      ]
    },
    {
      "name": "Create Coupon - BxGy",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"code\": \"B2G1_XY_TO_Z\",\n  \"type\": \"BXGY\",\n  \"details\": \"{\\\"buyProducts\\\":[{\\\"productId\\\":1,\\\"quantity\\\":2},{\\\"productId\\\":2,\\\"quantity\\\":2}],\\\"getProducts\\\":[{\\\"productId\\\":3,\\\"quantity\\\":1}],\\\"repetitionLimit\\\":3}\",\n  \"active\": true\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/coupons",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "coupons"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 201', () => pm.response.to.have.status(201));",
              "let j = pm.response.json(); if (j && j.id) { pm.environment.set('coupon_bxgy_id', j.id); pm.environment.set('coupon_bxgy_code', j.code); }"
            ]
          }
        }
      ]
    },
    {
      "name": "List Coupons",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/api/coupons",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "coupons"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('List returned', () => pm.response.to.have.status(200));"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Coupon by ID",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/api/coupons/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "coupons",
            ":id"
          ],
          "variable": [
            {
              "key": "id",
              "value": "{{coupon_cart_id}}"
            }
          ]
        }
      }
    },
    {
      "name": "Applicable Coupons - sample cart",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"items\": [\n    {\n      \"productId\": 1,\n      \"quantity\": 6,\n      \"price\": 50\n    },\n    {\n      \"productId\": 2,\n      \"quantity\": 3,\n      \"price\": 30\n    },\n    {\n      \"productId\": 3,\n      \"quantity\": 2,\n      \"price\": 25\n    }\n  ]\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/applicable-coupons",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "applicable-coupons"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 200', () => pm.response.to.have.status(200));",
              "let j = pm.response.json(); pm.test('applicable_coupons is array', () => pm.expect(j.applicable_coupons).to.be.an('array'));",
              "let codes = j.applicable_coupons.map(i => i.code);",
              "pm.test('Contains CART10 or PROD20_P1 or B2G1', () => pm.expect(codes.some(c=>['CART10','PROD20_P1','B2G1_XY_TO_Z'].includes(c))).to.be.true);"
            ]
          }
        }
      ]
    },
    {
      "name": "Apply Coupon by ID - CART",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"items\": [\n    {\n      \"productId\": 1,\n      \"quantity\": 6,\n      \"price\": 50\n    },\n    {\n      \"productId\": 2,\n      \"quantity\": 3,\n      \"price\": 30\n    },\n    {\n      \"productId\": 3,\n      \"quantity\": 2,\n      \"price\": 25\n    }\n  ]\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/apply-coupon/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "apply-coupon",
            ":id"
          ],
          "variable": [
            {
              "key": "id",
              "value": "{{coupon_cart_id}}"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 200', () => pm.response.to.have.status(200));",
              "let j = pm.response.json(); pm.test('updated_cart present', () => pm.expect(j).to.have.property('updated_cart'));",
              "let totalDiscount = j.updated_cart.total_discount; pm.test('total_discount > 0', () => pm.expect(totalDiscount).to.be.above(0));"
            ]
          }
        }
      ]
    },
    {
      "name": "Apply Coupon by ID - PRODUCT",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"items\": [\n    {\n      \"productId\": 1,\n      \"quantity\": 6,\n      \"price\": 50\n    },\n    {\n      \"productId\": 2,\n      \"quantity\": 3,\n      \"price\": 30\n    },\n    {\n      \"productId\": 3,\n      \"quantity\": 2,\n      \"price\": 25\n    }\n  ]\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/apply-coupon/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "apply-coupon",
            ":id"
          ],
          "variable": [
            {
              "key": "id",
              "value": "{{coupon_prod_id}}"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 200', () => pm.response.to.have.status(200));",
              "let j = pm.response.json(); pm.test('updated_cart present', () => pm.expect(j).to.have.property('updated_cart'));"
            ]
          }
        }
      ]
    },
    {
      "name": "Apply Coupon by ID - BXGY",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"items\": [\n    {\n      \"productId\": 1,\n      \"quantity\": 6,\n      \"price\": 50\n    },\n    {\n      \"productId\": 2,\n      \"quantity\": 3,\n      \"price\": 30\n    },\n    {\n      \"productId\": 3,\n      \"quantity\": 2,\n      \"price\": 25\n    }\n  ]\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/apply-coupon/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "apply-coupon",
            ":id"
          ],
          "variable": [
            {
              "key": "id",
              "value": "{{coupon_bxgy_id}}"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 200', () => pm.response.to.have.status(200));",
              "let j = pm.response.json(); pm.test('updated_cart present', () => pm.expect(j).to.have.property('updated_cart'));"
            ]
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ]
}